const cron = require('node-cron');
const TelegramApi = require('node-telegram-bot-api');
const axios = require('axios');
require('dotenv').config();
const { againOptions } = require('./options');  // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –æ–ø—Ü—ñ—ó –∑ options.js
const token = process.env.TELEGRAM_BOT_TOKEN;
console.log(token);

const bot = new TelegramApi(token, { polling: true });
const userState = {}; // –û–±'—î–∫—Ç –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–≤–∏–±—Ä–∞–Ω–æ—ó –∫–Ω–∏–≥–∏, –≥–ª–∞–≤–∏ —Ç–æ—â–æ)

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–Ω–∏–≥ –∑ API
async function getBooks() {
    const response = await axios.get('https://bible.helloao.org/api/ukr_npu/books.json');
    return response.data;
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≥–ª–∞–≤ –ø–µ–≤–Ω–æ—ó –∫–Ω–∏–≥–∏
async function getChapters(bookSlug) {
    const response = await axios.get(`https://bible.helloao.org/api/ukr_npu/${bookSlug}/chapters.json`);
    return response.data;
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—ñ—Ä—à—ñ–≤ —É –ø–µ–≤–Ω—ñ–π –≥–ª–∞–≤—ñ
async function getVerses(bookSlug, chapterNumber) {
    const response = await axios.get(`https://bible.helloao.org/api/ukr_npu/${bookSlug}/${chapterNumber}/verses.json`);
    return response.data;
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø–µ–≤–Ω–æ–≥–æ –≤—ñ—Ä—à–∞
async function getVerse(bookSlug, chapterNumber, verseNumber) {
    const response = await axios.get(`https://bible.helloao.org/api/ukr_npu/${bookSlug}/${chapterNumber}/${verseNumber}.json`);
    return response.data;
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –≤—ñ—Ä—à–∞ –∑ API –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
async function sendRandomVerse(chatId) {
    const randomData = await getRandomVerse();
    const verseMessage = `üìñ ${randomData.book.name} ${randomData.chapter.chapter}:${randomData.verse.verse}\n\n${randomData.verse.text}`;

    bot.sendMessage(chatId, verseMessage, {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–ß–∏—Ç–∞–π –¥–∞–ª—ñ', callback_data: 'choose_book' }]
            ]
        }
    });
}

// –û–±—Ä–æ–±–∫–∞ callback-–∑–∞–ø–∏—Ç—ñ–≤ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
bot.on('callback_query', async msg => {
    const data = msg.data;
    const chatId = msg.message.chat.id;

    if (data === 'choose_book') {
        const books = await getBooks();
        const bookButtons = books.map(book => [{ text: book.name, callback_data: `choose_chapter:${book.slug}` }]);

        await bot.sendMessage(chatId, '–û–±–µ—Ä—ñ—Ç—å –∫–Ω–∏–≥—É:', {
            reply_markup: {
                inline_keyboard: bookButtons
            }
        });

    } else if (data.startsWith('choose_chapter')) {
        const [action, bookSlug] = data.split(':');
        userState[chatId] = { bookSlug };
        await bot.sendMessage(chatId, '–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≥–ª–∞–≤–∏:');

    } else if (data.startsWith('choose_verse')) {
        const [action, bookSlug, chapterNumber] = data.split(':');
        userState[chatId].chapterNumber = chapterNumber;
        await bot.sendMessage(chatId, '–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≤—ñ—Ä—à–∞:');

    } else if (data === '/again') {
        await sendRandomVerse(chatId);
    }
});

// –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
bot.on('message', async msg => {
    const text = msg.text;
    const chatId = msg.chat.id;

    if (text === '/start') {
        await bot.sendMessage(chatId, `–ü—Ä–∏–≤—ñ—Ç, ${msg.from.first_name}! –¢–µ–±–µ –≤—ñ—Ç–∞—î BlessDay –±–æ—Ç.`);
    } else if (text === '/info') {
        await bot.sendMessage(chatId, `–¢–µ–±–µ –∑–≤—É—Ç—å ${msg.from.first_name} ${msg.from.last_name}!`);
    } else if (text === '/game') {
        await sendRandomVerse(chatId);
    } else if (userState[chatId] && !userState[chatId].chapterNumber) {
        const chapterNumber = parseInt(text);
        const chapters = await getChapters(userState[chatId].bookSlug);

        if (chapterNumber > 0 && chapterNumber <= chapters.length) {
            userState[chatId].chapterNumber = chapterNumber;
            await bot.sendMessage(chatId, `–í–∏ –≤–∏–±—Ä–∞–ª–∏ –≥–ª–∞–≤—É ${chapterNumber}. –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≤—ñ—Ä—à–∞:`);
        } else {
            await bot.sendMessage(chatId, `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä –≥–ª–∞–≤–∏. –£ –∫–Ω–∏–∑—ñ —î ${chapters.length} –≥–ª–∞–≤.`);
        }

    } else if (userState[chatId] && userState[chatId].chapterNumber && !userState[chatId].verseNumber) {
        const verseNumber = parseInt(text);
        const verses = await getVerses(userState[chatId].bookSlug, userState[chatId].chapterNumber);

        if (verseNumber > 0 && verseNumber <= verses.length) {
            const verse = await getVerse(userState[chatId].bookSlug, userState[chatId].chapterNumber, verseNumber);
            userState[chatId].verseNumber = verseNumber;
            await bot.sendMessage(chatId, `üìñ ${verse.text}`, againOptions);
        } else {
            await bot.sendMessage(chatId, `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä –≤—ñ—Ä—à–∞. –£ –≥–ª–∞–≤—ñ —î ${verses.length} –≤—ñ—Ä—à—ñ–≤.`);
        }
    } else {
        await bot.sendMessage(chatId, '–Ø –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä–∏ –¥—ñ—é –≤ –ú–ï–ù–Æ');
    }
});

// Cron-–∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –≤—ñ—Ä—à–∞ —â–æ–≥–æ–¥–∏–Ω–∏ –∑ 8:00 –¥–æ 21:00
cron.schedule('0 8-21 * * *', async () => {
    const chatId = process.env.TELEGRAM_CHAT_ID; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω–∏–π chatId –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await sendRandomVerse(chatId);
}, {
    timezone: "Europe/Kiev"
});

// –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –∑–∞–ø—É—Å–∫–∞—î –±–æ—Ç —ñ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î –∫–æ–º–∞–Ω–¥–∏
const start = () => {
    bot.setMyCommands([
        { command: '/start', description: '–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' },
        { command: '/info', description: '–Ü–Ω—Ñ–æ –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞' },
        { command: '/game', description: '–û—Ä–∏–º–∞—Ç–∏ –≤—ñ—Ä—à' },
    ]);

    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
start();




/* /* –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç */
// const cron = require('node-cron');
// const TelegramApi = require('node-telegram-bot-api');
// const axios = require('axios');
// require('dotenv').config();
// const { verseOptions, againOptions } = require('./options');
// const token = process.env.TELEGRAM_BOT_TOKEN;

// const bot = new TelegramApi(token, { polling: true });

// //–û—Ç—Ä–∏–º—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –≤—ñ—Ä—à
// async function getRandomVerse() {
//     try {
//         // –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥
//         const booksResponse = await axios.get('https://bible.helloao.org/api/ukr_npu/books.json');
//         const books = booksResponse.data;
//         const randomBook = books[Math.floor(Math.random() * books.length)];

//         // –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –≥–ª–∞–≤ –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ—ó –∫–Ω–∏–≥–∏
//         const chaptersResponse = await axios.get(`https://bible.helloao.org/api/ukr_npu/${randomBook.slug}/chapters.json`);
//         const chapters = chaptersResponse.data;
//         const randomChapter = chapters[Math.floor(Math.random() * chapters.length)];

//         // –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –≤—ñ—Ä—à—ñ–≤ –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ—ó –≥–ª–∞–≤–∏
//         const versesResponse = await axios.get(`https://bible.helloao.org/api/ukr_npu/${randomBook.slug}/${randomChapter.chapter}/verses.json`);
//         const verses = versesResponse.data;
//         const randomVerse = verses[Math.floor(Math.random() * verses.length)];

//         return `üìñ ${randomBook.name} ${randomChapter.chapter}:${randomVerse.verse}\n\n${randomVerse.text}`;
//     } catch (error) {
//         console.error('Error fetching random verse:', error);
//         return '–í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –≤—ñ—Ä—à–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.';
//     }
// }

// //—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤—ñ—Ä—à–∞
// async function sendRandomVerse(chatId) {
//     const verse = await getRandomVerse();
//     bot.sendMessage(chatId, verse, {
//         reply_markup: {
//             inline_keyboard: [
//                 [{ text: '–ß–∏—Ç–∞–π –¥–∞–ª—ñ', callback_data: 'read_more' }]
//             ]
//         }
//     });
// }

// //–ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ cron job –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤—ñ—Ä—à—ñ–≤
// cron.schedule('0 8-21 * * *', async () => {
//     const chatId = process.env.TELEGRAM_CHAT_ID; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω–∏–π chatId –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
//     await sendRandomVerse(chatId);
// }, {
//     timezone: "Europe/Kiev" // –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –≤–∞—à—É —á–∞—Å–æ–≤—É –∑–æ–Ω—É
// });

// //–û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
// const start = () => {
//     bot.setMyCommands([
//         { command: '/start', description: '–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' },
//         { command: '/info', description: '–Ü–Ω—Ñ–æ –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞' },
//         { command: '/game', description: '–û—Ä–∏–º–∞—Ç–∏ –≤—ñ—Ä—à' },
//     ]);

//     bot.on('message', async msg => {
//         const text = msg.text;
//         const chatId = msg.chat.id;

//         if (text === '/start') {
//             await bot.sendMessage(chatId, `–ü—Ä–∏–≤—ñ—Ç, ${msg.from.first_name}! –¢–µ–±–µ –≤—ñ—Ç–∞—î BlessDay –±–æ—Ç.`);
//         } else if (text === '/info') {
//             await bot.sendMessage(chatId, `–¢–µ–±–µ –∑–≤—É—Ç—å ${msg.from.first_name} ${msg.from.last_name}!`);
//         } else if (text === '/game') {
//             await sendRandomVerse(chatId);
//         } else {
//             await bot.sendMessage(chatId, '–Ø –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä–∏ –¥—ñ—é –≤ –ú–ï–ù–Æ');
//         }
//     });

//     console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!');
// }

// start();*/
