// const cron = require('node-cron');
// const TelegramApi = require('node-telegram-bot-api');
// require('dotenv').config();
// const axios = require('axios');

// const token = process.env.TELEGRAM_BOT_TOKEN;
// const bot = new TelegramApi(token, {polling: true});
/* –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç */
const cron = require('node-cron');
const TelegramApi = require('node-telegram-bot-api');
const axios = require('axios');
require('dotenv').config();
const { verseOptions, againOptions } = require('./options');
const token = process.env.TELEGRAM_BOT_TOKEN;

const bot = new TelegramApi(token, { polling: true });

//–û—Ç—Ä–∏–º—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –≤—ñ—Ä—à
async function getRandomVerse() {
    try {
        // –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥
        const booksResponse = await axios.get('https://bible.helloao.org/api/ukr_npu/books.json');
        const books = booksResponse.data;
        const randomBook = books[Math.floor(Math.random() * books.length)];

        // –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –≥–ª–∞–≤ –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ—ó –∫–Ω–∏–≥–∏
        const chaptersResponse = await axios.get(`https://bible.helloao.org/api/ukr_npu/${randomBook.slug}/chapters.json`);
        const chapters = chaptersResponse.data;
        const randomChapter = chapters[Math.floor(Math.random() * chapters.length)];

        // –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –≤—ñ—Ä—à—ñ–≤ –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ—ó –≥–ª–∞–≤–∏
        const versesResponse = await axios.get(`https://bible.helloao.org/api/ukr_npu/${randomBook.slug}/${randomChapter.chapter}/verses.json`);
        const verses = versesResponse.data;
        const randomVerse = verses[Math.floor(Math.random() * verses.length)];

        return `üìñ ${randomBook.name} ${randomChapter.chapter}:${randomVerse.verse}\n\n${randomVerse.text}`;
    } catch (error) {
        console.error('Error fetching random verse:', error);
        return '–í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –≤—ñ—Ä—à–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.';
    }
}

//—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤—ñ—Ä—à–∞
async function sendRandomVerse(chatId) {
    const verse = await getRandomVerse();
    bot.sendMessage(chatId, verse, {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–ß–∏—Ç–∞–π –¥–∞–ª—ñ', callback_data: 'read_more' }]
            ]
        }
    });
}

//–ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ cron job –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤—ñ—Ä—à—ñ–≤
cron.schedule('0 8-21 * * *', async () => {
    const chatId = process.env.TELEGRAM_CHAT_ID; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω–∏–π chatId –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await sendRandomVerse(chatId);
}, {
    timezone: "Europe/Kiev" // –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –≤–∞—à—É —á–∞—Å–æ–≤—É –∑–æ–Ω—É
});

//–û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
const start = () => {
    bot.setMyCommands([
        { command: '/start', description: '–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è' },
        { command: '/info', description: '–Ü–Ω—Ñ–æ –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞' },
        { command: '/game', description: '–û—Ä–∏–º–∞—Ç–∏ –≤—ñ—Ä—à' },
    ]);

    bot.on('message', async msg => {
        const text = msg.text;
        const chatId = msg.chat.id;

        if (text === '/start') {
            await bot.sendMessage(chatId, `–ü—Ä–∏–≤—ñ—Ç, ${msg.from.first_name}! –¢–µ–±–µ –≤—ñ—Ç–∞—î BlessDay –±–æ—Ç.`);
        } else if (text === '/info') {
            await bot.sendMessage(chatId, `–¢–µ–±–µ –∑–≤—É—Ç—å ${msg.from.first_name} ${msg.from.last_name}!`);
        } else if (text === '/game') {
            await sendRandomVerse(chatId);
        } else {
            await bot.sendMessage(chatId, '–Ø –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä–∏ –¥—ñ—é –≤ –ú–ï–ù–Æ');
        }
    });

    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!');
}

start();
